<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title || 'User Profile | Mangeyko' %></title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        #imageUpload { display: none; }
        .profile-pic { 
            cursor: pointer; 
            transition: all 0.3s ease; 
        }
        .profile-pic:hover { transform: scale(1.05); }
        .order-card { transition: all 0.3s ease; }
        .order-card:hover { 
            transform: translateY(-2px); 
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1); 
        }
        .address-card { transition: all 0.3s ease; }
        .address-card:hover { transform: translateY(-2px); }
        .address-card.default { border-left: 4px solid black; }
        .form-label {
            font-weight: 600;
            display: block;
            margin-bottom: 0.5rem;
            color: #374151;
        }
        #otpModal {
            transition: all 0.3s ease;
        }
    </style>
</head>
<body class="bg-gray-50 text-gray-900 font-sans">
    <!-- Navbar -->
    <nav class="bg-white shadow-sm">
        <div class="container mx-auto px-4 py-4 flex justify-between items-center">
            <a href="/" class="text-2xl font-bold text-gray-800">
                <i class="fas fa-store mr-2"></i> Mangeyko
            </a>
            <div class="flex items-center space-x-6">
                <a href="/profile" class="text-gray-600 hover:text-gray-800 transition">Profile</a>
                <a href="/cart" class="text-gray-600 hover:text-gray-800 transition">
                    <i class="fas fa-shopping-cart"></i> Cart
                </a>
                <a href="/logout" class="bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 transition">
                    Logout
                </a>
            </div>
        </div>
    </nav>

    <div class="container mx-auto px-4 py-8 max-w-6xl">
        <!-- Status Message Box -->
        <div id="updateStatus" class="hidden mb-6 p-3 rounded bg-blue-100 text-blue-800"></div>

        <!-- Profile Header Section -->
        <div class="profile-header bg-white p-6 rounded-lg shadow-md mb-8">
            <h1 class="text-2xl font-bold mb-6 pb-2 border-b border-gray-200">
                <i class="fas fa-user-circle mr-2"></i>My Profile
            </h1>
            
            <div class="flex flex-col md:flex-row items-start md:items-center gap-6">
                <!-- Profile Image Upload -->
                <div class="profile-image-section text-center">
                    <h2 class="form-label text-center mb-2">Profile Photo</h2>
                    <form id="profileImageForm">
                        <label for="imageUpload" class="relative inline-block">
                            <img 
                                src="<%= user.profileImage || '/images/default-avatar.png' %>" 
                                class="profile-pic w-32 h-32 rounded-full object-cover border-2 border-gray-200"
                                id="previewImage"
                                alt="Profile Picture">
                            <div class="absolute bottom-0 right-0 bg-black text-white rounded-full p-2 shadow-md">
                                <i class="fas fa-camera"></i>
                            </div>
                        </label>
                        <input type="file" id="imageUpload" name="profileImage" accept="image/*">
                        <p class="text-xs text-gray-500 mt-2">Click to update photo</p>
                    </form>
                </div>

                <!-- Profile Information Form -->
                <div class="profile-info flex-1 w-full">
                    <form id="editProfileForm" class="space-y-4">
                        <input type="hidden" id="currentEmail" value="<%= user.email %>">
                        
                        <div class="form-group">
                            <label for="nameInput" class="form-label">
                                <i class="fas fa-user mr-2"></i>Full Name
                            </label>
                            <input type="text" name="name" id="nameInput" 
                                value="<%= user.name %>" 
                                class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-black"
                                required>
                        </div>
                        
                        <div class="form-group">
                            <label for="emailInput" class="form-label">
                                <i class="fas fa-envelope mr-2"></i>Email Address
                            </label>
                            <input type="email" name="email" id="emailInput" value="<%= user.email %>" 
                                class="w-full px-4 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-black"
                                required>
                            <% if (user.unverifiedNewEmail && !user.isEmailVerified) { %>
                                <p class="text-red-500 text-sm mt-1">
                                    <i class="fas fa-exclamation-circle mr-1"></i>Email not verified
                                </p>
                            <% } %>
                        </div>
                        
                        <% if (isDemo) { %>
                            <span class="inline-block bg-yellow-100 text-yellow-800 px-2 py-1 rounded text-xs font-medium">
                                DEMO ACCOUNT
                            </span>
                        <% } %>
                        
                        <button type="submit" class="mt-3 bg-black text-white px-4 py-2 rounded hover:bg-gray-800 transition">
                            <i class="fas fa-save mr-2"></i>Save Profile Changes
                        </button>
                    </form>
                </div>
            </div>
        </div>

        <!-- Addresses Section (Mobile kept here) -->
        <div class="section bg-white p-6 rounded-lg shadow-sm mb-8">
            <h2 class="text-2xl font-bold mb-4 pb-2 border-b border-gray-200">
                <i class="fas fa-map-marker-alt mr-2"></i>My Addresses
            </h2>
            
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-6" id="addressesContainer">
                <% if (user.address && user.address.length > 0) { %>
                    <% user.address.forEach(address => { %>
                        <div class="address-card bg-white p-4 rounded shadow-sm border border-gray-200 <%= address.isDefault ? 'default' : '' %>">
                            <h3 class="font-bold text-lg mb-1"><%= address.fullName || 'N/A' %></h3>
                            <p class="text-gray-700 mb-1">
                                <i class="fas fa-map-pin mr-1 text-gray-500"></i>
                                <%= address.addressLine || '' %><%= address.landmark ? ', ' + address.landmark : '' %>
                            </p>
                            <p class="text-gray-700 mb-1">
                                <i class="fas fa-city mr-1 text-gray-500"></i>
                                <%= address.city || '' %><%= address.state ? ', ' + address.state : '' %><%= address.pinCode ? ' - ' + address.pinCode : '' %>
                            </p>
                            <p class="text-gray-700 mb-3">
                                <i class="fas fa-phone-alt mr-1 text-gray-500"></i>
                                <%= address.mobile || 'N/A' %>
                            </p>
                            
                            <div class="address-actions mt-4 flex flex-wrap gap-2">
                                <% if (!address.isDefault) { %>
                                    <button onclick="setDefaultAddress('<%= address._id %>')" 
                                            class="bg-gray-800 text-white px-3 py-1 rounded text-sm hover:bg-gray-700 flex items-center">
                                        <i class="fas fa-check-circle mr-1"></i> Set Default
                                    </button>
                                <% } else { %>
                                    <span class="inline-block bg-green-100 text-green-800 px-3 py-1 rounded text-sm font-medium flex items-center">
                                        <i class="fas fa-star mr-1"></i> Default Address
                                    </span>
                                <% } %>
                                <button onclick="editAddress('<%= address._id %>')" 
                                        class="bg-gray-200 text-gray-800 px-3 py-1 rounded text-sm hover:bg-gray-300 flex items-center">
                                    <i class="fas fa-edit mr-1"></i> Edit
                                </button>
                                <button onclick="deleteAddress('<%= address._id %>')" 
                                        class="bg-red-100 text-red-800 px-3 py-1 rounded text-sm hover:bg-red-200 flex items-center">
                                    <i class="fas fa-trash-alt mr-1"></i> Delete
                                </button>
                            </div>
                        </div>
                    <% }) %>
                <% } else { %>
                    <p class="text-gray-500 col-span-full p-4 bg-gray-50 rounded border border-gray-200">
                        <i class="fas fa-info-circle mr-2"></i>No addresses saved yet. Please add a delivery address.
                    </p>
                <% } %>
            </div>
            
            <button onclick="showAddressModal('add')" 
                    class="bg-black text-white px-4 py-2 rounded hover:bg-gray-800 transition flex items-center">
                <i class="fas fa-plus mr-2"></i> Add New Address
            </button>
        </div>

        <!-- Order History Section -->
        <div class="section bg-white p-6 rounded-lg shadow-sm mb-8">
            <h2 class="text-2xl font-bold mb-4 pb-2 border-b border-gray-200">
                <i class="fas fa-history mr-2"></i>Order History
            </h2>
            
            <button class="bg-black text-white px-4 py-2 rounded hover:bg-gray-800 transition flex items-center" onclick="toggleOrderHistory()">
                <i class="fas fa-chevron-down mr-2"></i> Show Order History
            </button>

            <div id="orderHistoryContainer" class="hidden mt-4">
                <% if (user.orderHistory && user.orderHistory.length > 0) { %>
                    <div id="paginatedOrders" class="space-y-4">
                        <!-- Orders will be dynamically rendered here -->
                    </div>
                    <div class="flex justify-between items-center mt-4">
                        <button id="prevPage" class="bg-gray-200 text-gray-800 px-4 py-2 rounded hover:bg-gray-300 transition" disabled>
                            <i class="fas fa-arrow-left mr-2"></i> Previous
                        </button>
                        <button id="nextPage" class="bg-gray-200 text-gray-800 px-4 py-2 rounded hover:bg-gray-300 transition">
                            Next <i class="fas fa-arrow-right ml-2"></i>
                        </button>
                    </div>
                <% } else { %>
                    <div class="bg-gray-50 border border-gray-200 rounded p-6 text-center">
                        <div class="text-gray-400 mb-3">
                            <i class="fas fa-shopping-cart text-4xl"></i>
                        </div>
                        <p class="text-gray-600 mb-4">You haven't placed any orders yet.</p>
                        <a href="/products" class="inline-block bg-black text-white px-4 py-2 rounded hover:bg-gray-800 transition">
                            <i class="fas fa-shopping-bag mr-2"></i> Start Shopping
                        </a>
                    </div>
                <% } %>
            </div>
        </div>

        <script>
            let currentPage = 1;
            const ordersPerPage = 3;
            const orders = <%- JSON.stringify(user.orderHistory || []) %>;

            function renderOrders() {
                const start = (currentPage - 1) * ordersPerPage;
                const end = start + ordersPerPage;
                const paginatedOrders = orders.slice(start, end);

                const container = document.getElementById('paginatedOrders');
                container.innerHTML = '';

                paginatedOrders.forEach(order => {
                    const orderCard = `
                        <div class="order-card bg-white p-4 rounded shadow-sm border border-gray-200">
                            <div class="flex justify-between items-start mb-2">
                                <h3 class="font-bold text-lg flex items-center">
                                    <i class="fas fa-shopping-bag mr-2 text-gray-700"></i>
                                    Order #${order._id.toString().slice(-6).toUpperCase()}
                                </h3>
                         
                            </div>
                            <div class="border-t border-gray-200 pt-3">
                                ${order.orderedItems.map(item => `
                                    <div class="flex items-start py-2 border-b border-gray-100 last:border-0">
                                        <div class="w-16 h-16 bg-gray-100 rounded overflow-hidden mr-3">
                                            ${item.product && item.product.productImage && item.product.productImage.length > 0
                                                ? `<img src="/uploads/product-images/${item.product.productImage[0]}" alt="${item.product.productName}" class="w-full h-full object-cover">`
                                                : `<div class="w-full h-full bg-gray-200 flex items-center justify-center">
                                                    <i class="fas fa-image text-gray-400"></i>
                                                </div>`}
                                        </div>
                                        <div class="flex-1">
                                            <h4 class="font-medium">${item.product ? item.product.productName : 'Product not available'}</h4>
                                            <p class="text-sm text-gray-600">Qty: ${item.quantity} × ₹${item.price.toFixed(2)}</p>
                                            <p class="text-xs mt-1">
                                                Status: 
                                                <span class="${item.status === 'Delivered' ? 'text-green-600' : ''}
                                                    ${item.status === 'Shipped' ? 'text-blue-600' : ''}
                                                    ${item.status === 'Processing' ? 'text-yellow-600' : ''}
                                                    ${item.status === 'Cancelled' ? 'text-red-600' : ''}">
                                                    ${item.status}
                                                </span>
                                            </p>
                                        </div>
                                    </div>
                                `).join('')}
                            </div>
                            <div class="flex justify-between items-center mt-4 pt-3 border-t border-gray-200">
                                <div>
                                    <p class="text-gray-600 text-sm">Ordered on ${new Date(order.orderDate).toLocaleDateString('en-IN', { day: 'numeric', month: 'short', year: 'numeric' })}</p>
                                    <p class="font-medium">Total: ₹${order.finalAmount.toFixed(2)}</p>
                                </div>
                                <a href="/orders/${order._id}" class="px-3 py-1 bg-gray-100 hover:bg-gray-200 rounded text-sm flex items-center">
                                    <i class="fas fa-eye mr-1"></i> View Details
                                </a>
                            </div>
                        </div>
                    `;
                    container.innerHTML += orderCard;
                });

                document.getElementById('prevPage').disabled = currentPage === 1;
                document.getElementById('nextPage').disabled = end >= orders.length;
            }

            document.getElementById('prevPage').addEventListener('click', () => {
                if (currentPage > 1) {
                    currentPage--;
                    renderOrders();
                }
            });

            document.getElementById('nextPage').addEventListener('click', () => {
                if (currentPage * ordersPerPage < orders.length) {
                    currentPage++;
                    renderOrders();
                }
            });

            function toggleOrderHistory() {
                const container = document.getElementById('orderHistoryContainer');
                container.classList.toggle('hidden');
                if (!container.classList.contains('hidden')) {
                    renderOrders();
                }
            }
        </script>

        <!-- Wallet Section -->
        <div class="section bg-white p-6 rounded-lg shadow-sm mb-8">
            <h2 class="text-2xl font-bold mb-4 pb-2 border-b border-gray-200">
                <i class="fas fa-wallet mr-2"></i>My Wallet
            </h2>
            
            <div class="bg-white p-6 rounded-lg shadow-sm border border-gray-200 max-w-md">
                <div class="flex items-center justify-between mb-6">
                    <div>
                        <p class="text-gray-500 mb-1">Available Balance</p>
                        <p class="text-3xl font-bold">₹<%= (user.wallet || 0).toLocaleString('en-IN') %></p>
                    </div>
                    <div class="bg-green-100 text-green-800 p-4 rounded-full">
                        <i class="fas fa-rupee-sign text-2xl"></i>
                    </div>
                </div>
                
                <div class="grid grid-cols-2 gap-4">
                    <button class="bg-gray-800 text-white px-4 py-3 rounded hover:bg-gray-700 transition flex items-center justify-center">
                        <i class="fas fa-plus-circle mr-2"></i> Add Money
                    </button>
                    <button class="bg-gray-200 text-gray-800 px-4 py-3 rounded hover:bg-gray-300 transition flex items-center justify-center">
                        <i class="fas fa-arrow-right mr-2"></i> Withdraw
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Address Modal (Keep mobile field here) -->
    <div id="addressModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 hidden z-50">
        <div class="bg-white rounded-lg shadow-xl w-full max-w-md">
            <div class="p-6">
                <h2 id="addressModalTitle" class="text-xl font-bold mb-4 flex items-center">
                    <i class="fas fa-map-marker-alt mr-2"></i>Edit Address
                </h2>
                
                <form id="addressForm" class="space-y-4">
                    <input type="hidden" id="addressId" name="addressId">
                    
                    <div>
                        <label for="fullName" class="form-label">
                            <i class="fas fa-user mr-2"></i>Full Name
                        </label>
                        <input type="text" id="fullName" name="fullName" required
                               class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-black"
                               placeholder="Enter recipient's full name">
                    </div>
                    
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label for="mobile" class="form-label">
                                <i class="fas fa-phone-alt mr-2"></i>Mobile Number
                            </label>
                            <input type="tel" id="mobile" name="mobile" required
                                   class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-black"
                                   placeholder="10-digit mobile number"
                                   maxlength="10"
                                   pattern="\d{10}">
                        </div>
                        <div>
                            <label for="pinCode" class="form-label">
                                <i class="fas fa-map-pin mr-2"></i>PIN Code
                            </label>
                            <input type="text" id="pinCode" name="pinCode" required
                                   class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-black"
                                   placeholder="6-digit PIN code"
                                   maxlength="6"
                                   pattern="\d{6}">
                        </div>
                    </div>
                    
                    <div>
                        <label for="addressLine" class="form-label">
                            <i class="fas fa-home mr-2"></i>Address Line
                        </label>
                        <textarea id="addressLine" name="addressLine" rows="3" required
                                  class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-black"
                                  placeholder="House No., Building, Street, Area"></textarea>
                    </div>
                    
                    <div>
                        <label for="landmark" class="form-label">
                            <i class="fas fa-landmark mr-2"></i>Landmark (Optional)
                        </label>
                        <input type="text" id="landmark" name="landmark"
                               class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-black"
                               placeholder="Nearby location for easier navigation">
                    </div>
                    
                    <div class="grid grid-cols-2 gap-4">
                        <div>
                            <label for="city" class="form-label">
                                <i class="fas fa-city mr-2"></i>City
                            </label>
                            <input type="text" id="city" name="city" required
                                   class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-black"
                                   placeholder="Your city">
                        </div>
                        <div>
                            <label for="state" class="form-label">
                                <i class="fas fa-map mr-2"></i>State
                            </label>
                            <input type="text" id="state" name="state" required
                                   class="w-full px-3 py-2 border border-gray-300 rounded focus:outline-none focus:ring-2 focus:ring-black"
                                   placeholder="Your state">
                        </div>
                    </div>
                    
                    <div class="flex items-center mt-2">
                        <input type="checkbox" id="isDefault" name="isDefault"
                               class="h-4 w-4 text-black focus:ring-black border-gray-300 rounded">
                        <label for="isDefault" class="ml-2 block text-sm text-gray-700">
                            Set as default delivery address
                        </label>
                    </div>
                    
                    <div class="flex justify-end space-x-3 pt-4">
                        <button type="button" onclick="hideAddressModal()"
                                class="px-4 py-2 border border-gray-300 rounded text-gray-700 hover:bg-gray-50 transition flex items-center">
                            <i class="fas fa-times mr-2"></i> Cancel
                        </button>
                        <button type="submit"
                                class="px-4 py-2 bg-black text-white rounded hover:bg-gray-800 transition flex items-center">
                            <i class="fas fa-save mr-2"></i> Save Address
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- OTP Verification Modal -->
    <div id="otpModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center hidden z-50">
        <div class="bg-white rounded-lg p-6 w-full max-w-md">
            <h2 class="text-xl font-bold mb-4">Verify Your Email</h2>
            <p class="mb-4">We've sent a 6-digit OTP to your new email address. Please enter it below:</p>
            
            <form id="otpForm">
                <div class="mb-4">
                    <input type="text" id="otpInput" placeholder="Enter OTP" 
                           class="w-full px-3 py-2 border rounded focus:outline-none focus:ring-2 focus:ring-black"
                           maxlength="6" required>
                </div>
                <div class="flex justify-end space-x-3">
                    <button type="button" onclick="hideOtpModal()"
                            class="px-4 py-2 border rounded text-gray-700 hover:bg-gray-50">
                        Cancel
                    </button>
                    <button type="submit" 
                            class="px-4 py-2 bg-black text-white rounded hover:bg-gray-800">
                        Verify
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Profile Image Upload with preview
        document.getElementById('imageUpload').addEventListener('change', function(e) {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('previewImage').src = e.target.result;
                }
                reader.readAsDataURL(file);
                
                const formData = new FormData();
                formData.append('profileImage', file);
                
                fetch('/profile/update', {
                    method: 'POST',
                    body: formData
                })
                .then(response => response.json())
                .then(result => {
                    if (result?.success) {
                        Swal.fire('Success', 'Profile image updated!', 'success');
                    } else {
                        Swal.fire('Error', result?.message || 'Upload failed', 'error');
                    }
                })
                .catch(error => {
                    console.error('Upload error:', error);
                    Swal.fire('Error', 'Upload failed', 'error');
                });
            }
        });

        // Show OTP modal
        function showOtpModal() {
            document.getElementById('otpModal').classList.remove('hidden');
        }

        // Hide OTP modal
        function hideOtpModal() {
            document.getElementById('otpModal').classList.add('hidden');
        }

        // Handle OTP submission
        document.getElementById('otpForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            const otp = document.getElementById('otpInput').value.trim(); // Trim to avoid extra spaces
            const email = document.getElementById('emailInput').value.trim();

            try {
                const response = await fetch('/profile/verify-email', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ email, otp })
                });

                const result = await response.json();

                if (result.success) {
                    Swal.fire('Success', 'Email verified successfully!', 'success').then(() => {
                        hideOtpModal();
                        window.location.reload();
                    });
                } else {
                    Swal.fire('Error', result.message || 'Incorrect OTP. Please try again.', 'error'); // Updated error message
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire('Error', 'Verification failed. Please try again later.', 'error');
            }
        });

        // Handle profile form submission
        document.getElementById('editProfileForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const currentEmail = document.getElementById('currentEmail').value;
            formData.append('currentEmail', currentEmail);

            try {
                const response = await fetch('/profile/update', {
                    method: 'POST',
                    body: formData
                });
                
                const result = await response.json();
                
                if (result.success) {
                    
                    if (result.requiresVerification) {
                        showOtpModal();
                    } else {
                        Swal.fire('Success', 'Profile updated successfully!', 'success');
                    }
                } else {
                    Swal.fire('Error', result.message || 'Update failed', 'error');
                }
            } catch (error) {
                console.error('Error:', error);
                Swal.fire('Error', 'Update failed', 'error');
            }
        });

        // Address management functions
        async function showAddressModal(action, addressId = null) {
            const modal = document.getElementById('addressModal');
            const title = document.getElementById('addressModalTitle');
            const form = document.getElementById('addressForm');
            
            form.reset();
            
            if (action === 'add') {
                title.innerHTML = '<i class="fas fa-map-marker-alt mr-2"></i>Add New Address';
                document.getElementById('addressId').value = '';
                document.getElementById('isDefault').checked = false;
            } else if (action === 'edit' && addressId) {
                title.innerHTML = '<i class="fas fa-map-marker-alt mr-2"></i>Edit Address';
                document.getElementById('addressId').value = addressId;
                
                try {
                    const response = await fetch('/profile/addresses', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            action: 'GET',
                            addressId: addressId
                        })
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        const address = result.data;
                        document.getElementById('fullName').value = address.fullName || '';
                        document.getElementById('mobile').value = address.mobile || '';
                        document.getElementById('pinCode').value = address.pinCode || '';
                        document.getElementById('addressLine').value = address.addressLine || '';
                        document.getElementById('landmark').value = address.landmark || '';
                        document.getElementById('city').value = address.city || '';
                        document.getElementById('state').value = address.state || '';
                        document.getElementById('isDefault').checked = address.isDefault || false;
                    } else {
                        Swal.fire('Error', result.message || 'Failed to load address', 'error');
                    }
                } catch (err) {
                    console.error('Error fetching address:', err);
                    Swal.fire('Error', 'Failed to load address data', 'error');
                }
            }
            
            modal.classList.remove('hidden');
        }

        function hideAddressModal() {
            document.getElementById('addressModal').classList.add('hidden');
        }

        async function deleteAddress(addressId) {
            const confirmation = await Swal.fire({
                title: 'Are you sure?',
                text: 'Do you want to delete this address?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Yes, delete it!'
            });

            if (confirmation.isConfirmed) {
                try {
                    const response = await fetch('/profile/addresses', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            action: 'DELETE',
                            addressId: addressId
                        })
                    });
                    
                    const result = await response.json();
                    
                    if (result.success) {
                        Swal.fire('Deleted!', 'Address deleted successfully.', 'success');
                        refreshAddresses(result.data);
                    } else {
                        Swal.fire('Error', result.message || 'Failed to delete address', 'error');
                    }
                } catch (err) {
                    console.error('Error deleting address:', err);
                    Swal.fire('Error', 'Failed to delete address', 'error');
                }
            }
        }

        async function setDefaultAddress(addressId) {
            try {
                const response = await fetch('/profile/addresses', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        action: 'SET_DEFAULT',
                        addressId: addressId
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    Swal.fire('Success', 'Default address updated successfully!', 'success');
                    refreshAddresses(result.data);
                } else {
                    Swal.fire('Error', result.message || 'Failed to set default address', 'error');
                }
            } catch (err) {
                console.error('Error setting default address:', err);
                Swal.fire('Error', 'Failed to update address', 'error');
            }
        }

        document.getElementById('addressForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const addressId = document.getElementById('addressId').value;
            const isEdit = !!addressId;
            
            const addressData = {
                fullName: document.getElementById('fullName').value,
                mobile: document.getElementById('mobile').value,
                pinCode: document.getElementById('pinCode').value,
                addressLine: document.getElementById('addressLine').value,
                landmark: document.getElementById('landmark').value,
                city: document.getElementById('city').value,
                state: document.getElementById('state').value,
                isDefault: document.getElementById('isDefault').checked
            };
            
            try {
                const response = await fetch('/profile/addresses', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        action: isEdit ? 'UPDATE' : 'ADD',
                        addressId: isEdit ? addressId : undefined,
                        ...addressData
                    })
                });
                
                const result = await response.json();
                
                if (result.success) {
                    hideAddressModal();
                    Swal.fire('Success', isEdit ? 'Address updated successfully!' : 'Address added successfully!', 'success');
                    refreshAddresses(result.data);
                } else {
                    Swal.fire('Error', result.message || 'Failed to save address', 'error');
                }
            } catch (err) {
                console.error('Error saving address:', err);
                Swal.fire('Error', 'Failed to save address', 'error');
            }
        });

        function refreshAddresses(addressesData) {
            const container = document.getElementById('addressesContainer');
            
            if (!addressesData || addressesData.length === 0) {
                container.innerHTML = `
                    <p class="text-gray-500 col-span-full p-4 bg-gray-50 rounded border border-gray-200">
                        <i class="fas fa-info-circle mr-2"></i>No addresses saved yet. Please add a delivery address.
                    </p>`;
                return;
            }
            
            let html = '';
            
            addressesData.forEach(address => {
                html += `
                    <div class="address-card bg-white p-4 rounded shadow-sm border border-gray-200 ${address.isDefault ? 'default' : ''}">
                        <h3 class="font-bold text-lg mb-1">${address.fullName || 'N/A'}</h3>
                        <p class="text-gray-700 mb-1">
                            <i class="fas fa-map-pin mr-1 text-gray-500"></i>
                            ${address.addressLine || ''}${address.landmark ? ', ' + address.landmark : ''}
                        </p>
                        <p class="text-gray-700 mb-1">
                            <i class="fas fa-city mr-1 text-gray-500"></i>
                            ${address.city || ''}${address.state ? ', ' + address.state : ''}${address.pinCode ? ' - ' + address.pinCode : ''}
                        </p>
                        <p class="text-gray-700 mb-3">
                            <i class="fas fa-phone-alt mr-1 text-gray-500"></i>
                            ${address.mobile || 'N/A'}
                        </p>
                        
                        <div class="address-actions mt-4 flex flex-wrap gap-2">
                            ${!address.isDefault ? 
                                `<button onclick="setDefaultAddress('${address._id}')" 
                                        class="bg-gray-800 text-white px-3 py-1 rounded text-sm hover:bg-gray-700 flex items-center">
                                    <i class="fas fa-check-circle mr-1"></i> Set Default
                                </button>` : 
                                `<span class="inline-block bg-green-100 text-green-800 px-3 py-1 rounded text-sm font-medium flex items-center">
                                    <i class="fas fa-star mr-1"></i> Default Address
                                </span>`}
                            <button onclick="showAddressModal('edit', '${address._id}')" 
                                    class="bg-gray-200 text-gray-800 px-3 py-1 rounded text-sm hover:bg-gray-300 flex items-center">
                                <i class="fas fa-edit mr-1"></i> Edit
                            </button>
                            <button onclick="deleteAddress('${address._id}')" 
                                    class="bg-red-100 text-red-800 px-3 py-1 rounded text-sm hover:bg-red-200 flex items-center">
                                <i class="fas fa-trash-alt mr-1"></i> Delete
                            </button>
                        </div>
                    </div>`;
            });
            
            container.innerHTML = html;
        }

        function editAddress(addressId) {
            showAddressModal('edit', addressId);
        }
    </script>
</body>
</html>