<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Details | Mangeyko</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        .status-processing { @apply bg-yellow-100 text-yellow-800; }
        .status-shipped { @apply bg-blue-100 text-blue-800; }
        .status-out-for-delivery { @apply bg-indigo-100 text-indigo-800; }
        .status-delivered { @apply bg-green-100 text-green-800; }
        .status-cancelled { @apply bg-red-100 text-red-800; }
        .status-return-requested { @apply bg-purple-100 text-purple-800; }
        .status-returned { @apply bg-gray-100 text-gray-800; }
        .status-partially-cancelled { @apply bg-orange-100 text-orange-800; }
        .order-item { @apply border-b border-gray-200 last:border-0; }
        .order-card { @apply transition-all duration-300 hover:shadow-md; }
    </style>
</head>
<body class="bg-gray-50">
    <div class="container mx-auto px-4 py-8 max-w-6xl">
        <!-- Header -->
        <div class="bg-white p-6 rounded-lg shadow-sm mb-8">
            <h1 class="text-2xl font-bold flex items-center">
                <i class="fas fa-receipt mr-2"></i> Order Details
            </h1>
            <p class="text-gray-600 mt-2">Order ID: <%= order._id %></p>
        </div>

        <!-- Main Content -->
        <div class="flex flex-col lg:flex-row gap-6">
            <!-- Left Column: Order Items and Status -->
            <div class="lg:w-2/3">
                <!-- Order Status -->
                <div class="bg-white p-6 rounded-lg shadow-sm mb-6 order-card">
                    <h2 class="text-xl font-bold mb-4 flex items-center">
                        <i class="fas fa-info-circle mr-2"></i> Order Status
                    </h2>
                    <div class="flex items-center">
                        <span class="px-3 py-1 rounded text-sm font-medium status-<%= order.status.toLowerCase().replace(' ', '-') %>">
                            <%= order.status %>
                        </span>
                        <p class="ml-4 text-gray-600">
                            Ordered on <%= order.formattedOrderDate %> | 
                            Estimated Delivery: <%= order.formattedDeliveryDate %>
                        </p>
                    </div>
                </div>

                <!-- Order Items -->
                <div class="bg-white p-6 rounded-lg shadow-sm mb-6 order-card">
                    <h2 class="text-xl font-bold mb-4 flex items-center">
                        <i class="fas fa-shopping-bag mr-2"></i> Items Ordered
                    </h2>
                    <div class="space-y-4">
                        <% order.items.forEach(item => { %>
                            <div class="flex items-start py-4 order-item">
                                <div class="w-16 h-16 bg-gray-100 rounded overflow-hidden mr-4">
                                    <img src="<%= item.product.productImage && item.product.productImage.length > 0 ? '/uploads/product-images/' + item.product.productImage[0] : '/images/placeholder-product.jpg' %>" 
                                         alt="<%= item.product.productName %>" 
                                         class="w-full h-full object-cover">
                                </div>
                                <div class="flex-1">
                                    <h3 class="font-medium"><%= item.product.productName %></h3>
                                    <p class="text-sm text-gray-600">Quantity: <%= item.quantity %></p>
                                    <p class="text-sm text-gray-600">Price: ₹<%= item.price.toFixed(2) %></p>
                                    <p class="text-sm text-gray-600">Status: <%= item.status %></p>
                                </div>
                                <div class="text-right">
                                    <p class="font-medium">₹<%= item.totalPrice %></p>
                                    <% if (item.status === 'Delivered') { %>
                                        <button onclick="returnOrder('<%= item.product._id %>', '<%= order._id %>')"
                                                class="bg-purple-600 text-white px-6 py-2 rounded hover:bg-purple-700 transition flex items-center">
                                            <i class="fas fa-undo-alt mr-2"></i> Return Order
                                        </button>
                                    <% } %>
                                    <% if (item.status === 'Processing') { %>
                                        <button onclick="cancelOrder('<%= order._id %>','<%= item.product._id %>')"
                                                class="bg-red-600 text-white px-6 py-2 rounded hover:bg-red-700 transition flex items-center">
                                            <i class="fas fa-times-circle mr-2"></i> Cancel Order
                                        </button>
                                    <% } %>
                                    
                                </div>
                            </div>
                        <% }); %>
                    </div>
                </div>
            </div>

            <!-- Right Column: Order Summary and Shipping -->
            <div class="lg:w-1/3">
                <!-- Order Summary -->
                <div class="bg-white p-6 rounded-lg shadow-sm sticky top-4 order-card">
                    <h2 class="text-xl font-bold mb-4 flex items-center">
                        <i class="fas fa-receipt mr-2"></i> Order Summary
                    </h2>
                    <div class="space-y-3 mb-4">
                        <div class="flex justify-between">
                            <span class="text-gray-600">Subtotal (<%= order.items.length %> items)</span>
                            <span>₹<%= order.subtotal %></span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Shipping</span>
                            <span>₹<%= order.shipping %></span>
                        </div>
                        <div class="flex justify-between">
                            <span class="text-gray-600">Tax</span>
                            <span>₹<%= order.tax %></span>
                        </div>
                        <% if (order.discount > 0) { %>
                            <div class="flex justify-between">
                                <span class="text-gray-600">Discount</span>
                                <span>-₹<%= order.discount %></span>
                            </div>
                        <% } %>
                    </div>
                    <div class="border-t border-gray-200 pt-4">
                        <div class="flex justify-between font-bold text-lg">
                            <span>Total</span>
                            <span>₹<%= order.total %></span>
                        </div>
                    </div>
                </div>

                <!-- Shipping Address -->
                <div class="bg-white p-6 rounded-lg shadow-sm mt-6 order-card">
                    <h2 class="text-xl font-bold mb-4 flex items-center">
                        <i class="fas fa-map-marker-alt mr-2"></i> Shipping Address
                    </h2>
                    <p class="text-gray-700 font-medium"><%= order.shippingAddress.fullName %></p>
                    <p class="text-gray-600"><%= order.shippingAddress.addressType %></p>
                    <p class="text-gray-600">
                        <%= order.shippingAddress.landmark ? order.shippingAddress.landmark + ', ' : '' %>
                        <%= order.shippingAddress.city %>, <%= order.shippingAddress.state %> - <%= order.shippingAddress.pincode %>
                    </p>
                    <p class="text-gray-600">Phone: <%= order.shippingAddress.phone %></p>
                </div>

                <!-- Payment Information -->
                <div class="bg-white p-6 rounded-lg shadow-sm mt-6 order-card">
                    <h2 class="text-xl font-bold mb-4 flex items-center">
                        <i class="fas fa-credit-card mr-2"></i> Payment Information
                    </h2>
                    <p class="text-gray-600">Method: <%= order.paymentMethod === 'cod' ? 'Cash on Delivery' : 'Wallet' %></p>
                    <p class="text-gray-600">Status: <%= order.paymentStatus %></p>
                </div>
            </div>
        </div>

        <!-- Action Buttons -->
        <div class="bg-white p-6 rounded-lg shadow-sm mt-6 flex flex-wrap justify-between gap-4 order-card">
            <a href="/profile" class="bg-gray-200 text-gray-800 px-6 py-2 rounded hover:bg-gray-300 transition flex items-center">
                <i class="fas fa-arrow-left mr-2"></i> Back to Profile
            </a>
            
            <div class="flex flex-wrap gap-3">
                <a href="/orders/<%= order._id %>/track" class="bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700 transition flex items-center">
                    <i class="fas fa-truck mr-2"></i> Track Order
                </a>
                
                <a href="/orders/<%= order._id %>/invoice" class="bg-green-600 text-white px-6 py-2 rounded hover:bg-green-700 transition flex items-center">
                    <i class="fas fa-file-invoice mr-2"></i> Download Invoice
                </a>
                
                <!-- <% if (order.status === 'Processing') { %>
                    <button onclick="cancelOrder('<%= order._id %>')"
                            class="bg-red-600 text-white px-6 py-2 rounded hover:bg-red-700 transition flex items-center">
                        <i class="fas fa-times-circle mr-2"></i> Cancel Order
                    </button>
                <% } %>
                 -->
                <!-- <% if (order.status === 'Delivered') { %>
                    <button onclick="returnOrder('<%= order._id %>')"
                            class="bg-purple-600 text-white px-6 py-2 rounded hover:bg-purple-700 transition flex items-center">
                        <i class="fas fa-undo-alt mr-2"></i> Return Order
                    </button>
                <% } %> -->
            </div>
        </div>
    </div>

    <!-- Return Order Modal -->
    <div id="returnModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden transition-opacity duration-300">
        <div class="bg-white rounded-lg p-6 w-full max-w-md">
            <h3 class="text-xl font-bold mb-4">Return Order</h3>
            <p class="mb-4">Please provide a reason for returning this order:</p>
            <textarea id="returnReason" class="w-full border border-gray-300 rounded p-2 mb-4" rows="3" placeholder="Return reason"></textarea>
            <div class="flex justify-end gap-3">
                <button onclick="closeReturnModal()" class="bg-gray-200 text-gray-800 px-4 py-2 rounded hover:bg-gray-300 transition">Cancel</button>
                <button onclick="submitReturn()" class="bg-purple-600 text-white px-4 py-2 rounded hover:bg-purple-700 transition">Submit Return</button>
            </div>
        </div>
    </div>
    
    <script>
        // Cancel Order
        async function cancelOrder(orderId,productId) {
            if (!confirm('Are you sure you want to cancel this order?')) return;

            try {
                const response = await fetch(`/orders/${orderId}/cancel`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        productId: productId,
                        cancelReason: 'Customer requested cancellation'
                    })
                });

                const result = await response.json();

                if (result.success) {
                    alert('Order cancelled successfully');
                    window.location.reload();
                } else {
                    alert(result.message || 'Failed to cancel order');
                }
            } catch (error) {
                console.error('Error cancelling order:', error);
                alert('Failed to cancel order');
            }
        }

        // Return Order Modal

        let currentProductId = null;
        let currentOrderId = null;

    function returnOrder(productId, orderId) {
    currentProductId = productId;
    currentOrderId = orderId;
    document.getElementById('returnModal').classList.remove('hidden');
    }

    function closeReturnModal() {
        console.log('Closing modal...');
            const modal = document.getElementById('returnModal');
        if (modal) {
        modal.classList.add('hidden');
    }
    document.getElementById('returnReason').value = ''; // Clear input after close
    currentProductId = null;
    currentOrderId = null;
}

async function submitReturn() {
    const returnReason = document.getElementById('returnReason').value.trim();

    if (!returnReason) {
        alert('Please provide a reason for the return');
        return;
    }

    try {
        const response = await fetch(`/orders/${currentOrderId}/return`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                productId: currentProductId,
                returnReason
            })
        });

        const result = await response.json();

        if (result.success) {
            alert('Return request submitted successfully');
            closeReturnModal();
            setTimeout(() => window.location.reload(), 300); // Slight delay for visual closure
        } else {
            alert(result.message || 'Failed to submit return request');
        }
    } catch (error) {
        console.error('Error submitting return request:', error);
        alert('Failed to submit return request');
    }
}

        
        // let currentOrderId = '';
        
        // function returnOrder(orderId) {
        //     currentOrderId = orderId;
        //     document.getElementById('returnModal').classList.remove('hidden');
        // }
        
        // function closeReturnModal() {
        //     document.getElementById('returnModal').classList.add('hidden');
        //     document.getElementById('returnReason').value = '';
        // }
        
        // async function submitReturn() {
        //     const returnReason = document.getElementById('returnReason').value.trim();
            
        //     if (!returnReason) {
        //         alert('Please provide a reason for the return');
        //         return;
        //     }
            
        //     try {
        //         const response = await fetch(`/orders/${currentOrderId}/return`, {
        //             method: 'POST',
        //             headers: {
        //                 'Content-Type': 'application/json'
        //             },
        //             body: JSON.stringify({
        //                 returnReason
        //             })
        //         });

        //         const result = await response.json();

        //         if (result.success) {
        //             alert('Return request submitted successfully');
        //             closeReturnModal();
        //             window.location.reload();
        //         } else {
        //             alert(result.message || 'Failed to submit return request');
        //         }
        //     } catch (error) {
        //         console.error('Error submitting return request:', error);
        //         alert('Failed to submit return request');
        //     }
        // }
    </script>
</body>
</html>