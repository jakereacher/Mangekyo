<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Checkout - <%= user.name %></title>
  <script src="https://cdn.tailwindcss.com/3.4.16"></script>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet">
  <style>
    .address-radio:checked + .address-card {
      border-color: #1a1a1a;
      background-color: rgba(255, 255, 255, 0.9);
    }
    .payment-radio:checked + .payment-method {
      border-color: #1a1a1a;
      background-color: rgba(255, 255, 255, 0.9);
    }
    .custom-radio {
      position: relative;
      width: 20px;
      height: 20px;
      border-radius: 50%;
      border: 2px solid #d1d5db;
      display: inline-block;
    }
    .custom-radio::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 10px;
      height: 10px;
      border-radius: 50%;
      background-color: transparent;
    }
    input[type="radio"]:checked + .custom-radio {
      border-color: #4f46e5;
    }
    input[type="radio"]:checked + .custom-radio::after {
      background-color: #4f46e5;
    }
    .sticky-summary {
      position: sticky;
      top: 2rem;
    }
  </style>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: '#4f46e5'
          }
        }
      }
    }
  </script>
</head>
<body class="bg-white min-h-screen">
  <header class="bg-white/90 backdrop-blur-sm shadow-sm">
    <div class="container mx-auto px-4 py-4 flex items-center justify-between">
      <a href="/" class="text-2xl font-['Pacifico'] text-primary">Mangeyko</a>
      <div class="flex items-center space-x-4">
        <div class="w-10 h-10 flex items-center justify-center rounded-full bg-gray-100">
          <i class="ri-user-line text-gray-600"></i>
        </div>
      </div>
    </div>
  </header>

  <main class="container mx-auto px-4 py-8 max-w-6xl">
    <!-- Progress Steps -->
    <div class="flex items-center mb-8">
      <div class="w-8 h-8 flex items-center justify-center rounded-full bg-primary text-white">1</div>
      <div class="h-1 w-16 bg-primary mx-2"></div>
      <div class="w-8 h-8 flex items-center justify-center rounded-full bg-primary text-white">2</div>
      <div class="h-1 w-16 bg-primary mx-2"></div>
      <div class="w-8 h-8 flex items-center justify-center rounded-full bg-primary text-white font-bold">3</div>
      <div class="ml-4 text-sm text-gray-600">Delivery & Payment</div>
    </div>

    <!-- Two Column Layout -->
    <div class="flex flex-col md:flex-row gap-8">
      <!-- Left Column: Delivery & Payment -->
      <div class="w-full md:w-3/5 space-y-8">
        <!-- Delivery Address Section -->
        <div>
          <h1 class="text-2xl font-bold mb-6">Delivery Address</h1>
          <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
            <% addresses.forEach(address => { %>
              <div class="relative">
                <input type="radio" name="address" id="address-<%= address.id %>" 
                      class="address-radio hidden" 
                      <%= address.isDefault ? 'checked' : '' %> 
                      data-address-id="<%= address.id %>">
                <label for="address-<%= address.id %>" class="address-card block p-4 border rounded cursor-pointer hover:border-primary transition-all">
                  <div class="flex justify-between items-start mb-2">
                    <div class="flex items-center">
                      <span class="font-medium"><%= address.fullName %></span>
                      <% if (address.isDefault) { %>
                        <span class="ml-2 px-2 py-0.5 text-xs bg-blue-100 text-blue-800 rounded">Default</span>
                      <% } %>
                    </div>
                    <div class="flex items-center">
                      <div class="custom-radio"></div>
                    </div>
                  </div>
                  <div class="text-gray-600 text-sm mb-1"><%= address.mobile %></div>
                  <div class="text-gray-600 text-sm">
                    <%= address.addressLine %><br>
                    <%= address.city %>, <%= address.state %> <%= address.pinCode %><br>
                    <% if (address.landmark) { %>
                      Landmark: <%= address.landmark %><br>
                    <% } %>
                  </div>
                </label>
              </div>
            <% }); %>
            
            <div class="relative">
              <button id="addNewAddressBtn" class="h-full w-full p-4 border border-dashed rounded flex flex-col items-center justify-center cursor-pointer hover:bg-gray-50 transition-all">
                <div class="w-12 h-12 flex items-center justify-center rounded-full bg-primary/10 text-primary mb-2">
                  <i class="ri-add-line ri-xl"></i>
                </div>
                <span class="font-medium text-gray-800">Add New Address</span>
              </button>
            </div>
          </div>
        </div>

        <!-- Payment Method Section -->
        <div>
          <h2 class="text-2xl font-bold mb-6">Payment Method</h2>
          <div class="space-y-3">
            <div class="relative">
              <input type="radio" name="payment" id="cod" class="payment-radio hidden" checked value="cod">
              <label for="cod" class="payment-method block p-4 border rounded cursor-pointer hover:border-primary transition-all">
                <div class="flex items-center justify-between">
                  <div class="flex items-center">
                    <div class="w-10 h-10 flex items-center justify-center rounded-full bg-black/10 mr-3">
                      <i class="ri-cash-line text-black"></i>
                    </div>
                    <div>
                      <div class="font-medium">Cash on Delivery</div>
                      <div class="text-sm text-gray-500">Pay when your order arrives</div>
                    </div>
                  </div>
                  <div class="custom-radio"></div>
                </div>
              </label>
            </div>
            <div class="relative">
              <input type="radio" name="payment" id="card" class="payment-radio hidden" value="card">
              <label for="card" class="payment-method block p-4 border rounded cursor-pointer hover:border-primary transition-all">
                <div class="flex items-center justify-between">
                  <div class="flex items-center">
                    <div class="w-10 h-10 flex items-center justify-center rounded-full bg-black/10 mr-3">
                      <i class="ri-bank-card-line text-black"></i>
                    </div>
                    <div>
                      <div class="font-medium">Credit/Debit Card</div>
                      <div class="text-sm text-gray-500">Pay securely with your card</div>
                    </div>
                  </div>
                  <div class="custom-radio"></div>
                </div>
              </label>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Right Column: Order Summary -->
      <div class="w-full md:w-2/5">
        <div class="sticky-summary">
          <div class="bg-white/90 backdrop-blur-sm rounded shadow-sm p-6">
            <h2 class="text-xl font-bold mb-4">Order Summary (<%= cartItems.length %> items)</h2>
            <div class="max-h-80 overflow-y-auto space-y-4">
              <% cartItems.forEach(item => { %>
                <div class="flex items-center justify-between pb-4 border-b">
                  <div class="flex items-center space-x-4">
                    <div class="w-16 h-16 bg-gray-100 rounded-lg overflow-hidden">
                      <img src="<%= item.product.mainImage %>" alt="<%= item.product.productName %>" class="w-full h-full object-cover">
                    </div>
                    <div>
                      <h3 class="font-medium"><%= item.product.productName %></h3>
                      <p class="text-sm text-gray-500">Qty: <%= item.quantity %> Ã— $<%= item.price.toFixed(2) %></p>
                    </div>
                  </div>
                  <div class="text-right">
                    <p class="font-medium">$<%= item.totalPrice.toFixed(2) %></p>
                  </div>
                </div>
              <% }); %>
            </div>
            
            <div class="mt-6 space-y-2">
              <div class="flex justify-between pt-2">
                <span class="text-gray-600">Subtotal</span>
                <span class="font-medium">$<%= subtotal %></span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">Shipping</span>
                <span class="font-medium">$<%= shipping %></span>
              </div>
              <div class="flex justify-between">
                <span class="text-gray-600">Tax</span>
                <span class="font-medium">$<%= tax %></span>
              </div>
              <div class="flex justify-between pt-2 border-t font-bold mt-2">
                <span>Total</span>
                <span>$<%= total %></span>
              </div>
            </div>
          </div>
          
          <!-- Checkout Button (on desktop) -->
          <div class="mt-4 hidden md:block">
            <button id="placeOrderBtnDesktop" class="w-full bg-primary text-white px-8 py-3 font-medium rounded-lg whitespace-nowrap flex items-center justify-center">
              <span id="desktopBtnText">Place Order</span>
              <svg id="desktopLoading" class="animate-spin -ml-1 mr-3 h-5 w-5 text-white hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
                <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
                <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
              </svg>
            </button>
            <div class="flex items-center justify-center mt-4 text-sm text-gray-600">
              <i class="ri-shield-check-line text-green-600 mr-2"></i>
              <span>Secure Checkout</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>

  <!-- Mobile Checkout Button (fixed at bottom) -->
  <footer class="fixed bottom-0 left-0 right-0 bg-white/90 backdrop-blur-sm shadow-[0_-2px_10px_rgba(0,0,0,0.1)] p-4 md:hidden">
    <div class="container mx-auto flex items-center justify-between">
      <div>
        <div class="text-sm text-gray-600">Total Amount</div>
        <div class="text-xl font-bold">$<%= total %></div>
      </div>
      <button id="placeOrderBtnMobile" class="bg-primary text-white px-6 py-3 font-medium rounded-lg whitespace-nowrap flex items-center justify-center">
        <span id="mobileBtnText">Place Order</span>
        <svg id="mobileLoading" class="animate-spin -ml-1 mr-3 h-5 w-5 text-white hidden" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
      </button>
    </div>
  </footer>

  <!-- Add New Address Modal -->
  <div id="addressModal" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 hidden">
    <div class="bg-white/95 backdrop-blur-sm rounded-lg shadow-xl w-full max-w-md mx-4 relative">
      <div class="p-5 border-b flex justify-between items-center">
        <h3 class="text-xl font-bold">Add New Address</h3>
        <button id="closeAddressModal" class="w-8 h-8 flex items-center justify-center text-gray-500 hover:text-gray-700">
          <i class="ri-close-line ri-lg"></i>
        </button>
      </div>
      <div class="p-5">
        <form id="addressForm" class="space-y-4">
          <div>
            <label for="fullName" class="block text-sm font-medium text-gray-700 mb-1">Full Name</label>
            <input type="text" id="fullName" class="w-full px-3 py-2 border rounded focus:ring-2 focus:ring-primary focus:outline-none" required>
          </div>
          <div>
            <label for="phoneNumber" class="block text-sm font-medium text-gray-700 mb-1">Phone Number</label>
            <input type="tel" id="phoneNumber" class="w-full px-3 py-2 border rounded focus:ring-2 focus:ring-primary focus:outline-none" required>
          </div>
          <div>
            <label for="addressLine" class="block text-sm font-medium text-gray-700 mb-1">Address Line</label>
            <input type="text" id="addressLine" class="w-full px-3 py-2 border rounded focus:ring-2 focus:ring-primary focus:outline-none" required>
          </div>
          <div>
            <label for="landmark" class="block text-sm font-medium text-gray-700 mb-1">Landmark (Optional)</label>
            <input type="text" id="landmark" class="w-full px-3 py-2 border rounded focus:ring-2 focus:ring-primary focus:outline-none">
          </div>
          <div class="grid grid-cols-2 gap-4">
            <div>
              <label for="city" class="block text-sm font-medium text-gray-700 mb-1">City</label>
              <input type="text" id="city" class="w-full px-3 py-2 border rounded focus:ring-2 focus:ring-primary focus:outline-none" required>
            </div>
            <div>
              <label for="state" class="block text-sm font-medium text-gray-700 mb-1">State</label>
              <input type="text" id="state" class="w-full px-3 py-2 border rounded focus:ring-2 focus:ring-primary focus:outline-none" required>
            </div>
          </div>
          <div>
            <label for="pinCode" class="block text-sm font-medium text-gray-700 mb-1">PIN Code</label>
            <input type="text" id="pinCode" class="w-full px-3 py-2 border rounded focus:ring-2 focus:ring-primary focus:outline-none" required>
          </div>
          <div class="flex items-center mt-2">
            <input type="checkbox" id="defaultAddress" class="hidden">
            <label for="defaultAddress" class="flex items-center cursor-pointer">
              <div class="w-5 h-5 border rounded mr-2 flex items-center justify-center">
                <div class="w-3 h-3 bg-primary hidden" id="defaultAddressCheck"></div>
              </div>
              <span class="text-sm">Set as default address</span>
            </label>
          </div>
        </form>
      </div>
      <div class="p-5 border-t">
        <button id="saveAddressBtn" class="w-full bg-primary text-white py-2 font-medium rounded-lg whitespace-nowrap">Save Address</button>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Address selection
      document.querySelectorAll('.address-radio').forEach(radio => {
        radio.addEventListener('change', async function() {
          if (this.checked) {
            const addressId = this.dataset.addressId;
            try {
              const response = await fetch('/checkout/address', {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify({ addressId })
              });
              
              const data = await response.json();
              if (!data.success) {
                alert('Failed to update address');
              } else {
                window.location.reload();
              }
            } catch (error) {
              console.error('Error:', error);
              alert('Error updating address');
            }
          }
        });
      });

      // Add New Address Modal
      const addressModal = document.getElementById('addressModal');
      const addNewAddressBtn = document.getElementById('addNewAddressBtn');
      const closeAddressModal = document.getElementById('closeAddressModal');
      const saveAddressBtn = document.getElementById('saveAddressBtn');

      addNewAddressBtn.addEventListener('click', function() {
        addressModal.classList.remove('hidden');
      });

      closeAddressModal.addEventListener('click', function() {
        addressModal.classList.add('hidden');
      });

      // Default Address Checkbox
      const defaultAddress = document.getElementById('defaultAddress');
      const defaultAddressCheck = document.getElementById('defaultAddressCheck');
      defaultAddress.addEventListener('change', function() {
        if (this.checked) {
          defaultAddressCheck.classList.remove('hidden');
        } else {
          defaultAddressCheck.classList.add('hidden');
        }
      });

      // Save New Address
      saveAddressBtn.addEventListener('click', async function() {
        const formData = {
          fullName: document.getElementById('fullName').value,
          mobile: document.getElementById('phoneNumber').value,
          addressLine: document.getElementById('addressLine').value,
          landmark: document.getElementById('landmark').value,
          city: document.getElementById('city').value,
          state: document.getElementById('state').value,
          pinCode: document.getElementById('pinCode').value,
          isDefault: document.getElementById('defaultAddress').checked
        };

        try {
          const response = await fetch('/profile/address', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ 
              action: 'ADD',
              addressData: formData
            })
          });

          const data = await response.json();
          if (data.success) {
            window.location.reload();
          } else {
            alert('Failed to save address: ' + (data.message || 'Unknown error'));
          }
        } catch (error) {
          console.error('Error:', error);
          alert('Error saving address');
        }
      });

      // Place Order Button (both desktop and mobile)
      const placeOrderBtnDesktop = document.getElementById('placeOrderBtnDesktop');
      const placeOrderBtnMobile = document.getElementById('placeOrderBtnMobile');
      
      async function placeOrder() {
        try {
          // Get selected payment method
          const paymentMethod = document.querySelector('input[name="payment"]:checked').id;
          
          // Get selected address
          const selectedAddress = document.querySelector('input[name="address"]:checked');
          if (!selectedAddress) {
            alert('Please select a delivery address');
            return;
          }
          
          // Show loading state
          toggleLoading(true);
          
          const response = await fetch('/checkout/place-order', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              paymentMethod: paymentMethod,
              addressId: selectedAddress.dataset.addressId
            })
          });
          
          const data = await response.json();
          
          if (data.success) {
            // Redirect to order confirmation page
            window.location.href = `/order-confirmation/${data.orderId}`;
          } else {
            alert(data.message || 'Failed to place order');
          }
        } catch (error) {
          console.error('Error placing order:', error);
          alert('Error placing order');
        } finally {
          toggleLoading(false);
        }
      }

      function toggleLoading(isLoading) {
        if (placeOrderBtnDesktop) {
          placeOrderBtnDesktop.disabled = isLoading;
          document.getElementById('desktopBtnText').classList.toggle('hidden', isLoading);
          document.getElementById('desktopLoading').classList.toggle('hidden', !isLoading);
        }
        
        if (placeOrderBtnMobile) {
          placeOrderBtnMobile.disabled = isLoading;
          document.getElementById('mobileBtnText').classList.toggle('hidden', isLoading);
          document.getElementById('mobileLoading').classList.toggle('hidden', !isLoading);
        }
      }

      if (placeOrderBtnDesktop) {
        placeOrderBtnDesktop.addEventListener('click', placeOrder);
      }
      
      if (placeOrderBtnMobile) {
        placeOrderBtnMobile.addEventListener('click', placeOrder);
      }
    });
  </script>
</body>
</html>