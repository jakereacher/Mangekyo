<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Return Requests - Admin Panel</title>
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/css/admin.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.min.css">
    <style>
        body {
            margin: 0;
            font-family: Arial, sans-serif;
            background-color: #f8f9fa;
            display: flex;
            flex-direction: column;
            min-height: 100vh;
        }
        .navbar {
            background-color: #333;
            color: #fff;
            padding: 10px 20px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        .navbar a {
            color: #fff;
            text-decoration: none;
            margin-left: 20px;
            transition: color 0.3s;
        }
        .navbar a:hover {
            color: #f0ad4e;
        }
        .nav-links {
            display: flex;
            align-items: center;
        }
        .container {
            max-width: 1200px;
            margin: 2rem auto;
            padding: 0 15px;
            flex: 1;
        }
        .card {
            border: none;
            border-radius: 8px;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            margin-bottom: 1.5rem;
            background-color: #fff;
        }
        .card-header {
            background-color: #007bff;
            color: white;
            font-weight: 500;
            padding: 1rem;
            border-radius: 8px 8px 0 0;
        }
        .card-body {
            padding: 1.5rem;
        }
        .table {
            background-color: #fff;
            border-radius: 8px;
            overflow: hidden;
        }
        .table thead th {
            background-color: #f1f3f5;
            color: #343a40;
            font-weight: 600;
            text-transform: uppercase;
            font-size: 0.85rem;
            padding: 1rem;
        }
        .table tbody tr:hover {
            background-color: #f8f9fa;
        }
        .btn-group .btn {
            margin-right: 5px;
            padding: 0.5rem 1rem;
            font-size: 0.9rem;
            border-radius: 4px;
            transition: background-color 0.3s ease;
        }
        .btn-approve {
            background-color: #28a745;
            color: white;
        }
        .btn-approve:hover {
            background-color: #218838;
        }
        .btn-reject {
            background-color: #dc3545;
            color: white;
        }
        .btn-reject:hover {
            background-color: #c82333;
        }
        footer {
            background-color: #343a40;
            color: #fff;
            padding: 1rem 0;
            text-align: center;
            font-size: 0.9rem;
            margin-top: auto;
        }
    </style>
</head>
<body>
    <!-- Navbar -->
    <nav class="navbar">
        <a class="navbar-brand" href="/admin/dashboard">Admin Panel</a>
        <div class="nav-links">
            <a href="/admin/orders">Orders</a>
            <a href="/admin/products">Products</a>
            <a href="/admin/users">Users</a>
            <a href="/admin/logout">Logout</a>
        </div>
    </nav>

    <!-- Main Content -->
    <div class="container mt-5">
        <h2 class="mb-4">Return Requests</h2>

        <% if (returnRequests.length === 0) { %>
            <div class="alert alert-info">
                No return requests found.
            </div>
        <% } else { %>
            <div class="card">
                <div class="card-header">
                    <h5>Pending Return Requests</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-bordered">
                            <thead>
                                <tr>
                                    <th>Order ID</th>
                                    <th>Product</th>
                                    <th>Image</th>
                                    <th>Customer</th>
                                    <th>Quantity</th>
                                    <th>Price</th>
                                    <th>Return Reason</th>
                                    <th>Request Date</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% returnRequests.forEach(request => { %>
                                    <tr>
                                        <td><a href="/admin/orders/<%= request.orderId %>"><%= request.orderId %></a></td>
                                        <td><%= request.productName %></td>
                                        <td>
                                            <img src="<%= request.productImage %>" alt="<%= request.productName %>" style="width: 50px; height: auto;">
                                        </td>
                                        <td><%= request.customerName %><br><small><%= request.customerEmail %></small></td>
                                        <td><%= request.quantity %></td>
                                        <td>₹<%= request.price.toFixed(2) %></td>
                                        <td><%= request.returnReason %></td>
                                        <td><%= request.returnRequestDate %></td>
                                        <td>
                                            <div class="btn-group">
                                                <button class="btn btn-approve btn-approve-return" data-order-id="<%= request.orderId %>" data-product-id="<%= request.productId %>">
                                                    Approve
                                                </button>
                                                <button class="btn btn-reject btn-reject-return" data-order-id="<%= request.orderId %>" data-product-id="<%= request.productId %>">
                                                    Reject
                                                </button>
                                            </div>
                                        </td>
                                    </tr>
                                <% }) %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        <% } %>
    </div>

    <!-- Footer -->
    <footer class="bg-dark text-white text-center py-3 mt-5">
        <p>© 2025 Admin Panel. All rights reserved.</p>
    </footer>

    <!-- Scripts -->
    <script src="/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.0.19/dist/sweetalert2.all.min.js"></script>
    <script>
        // Approve Return Request
        document.querySelectorAll('.btn-approve-return').forEach(button => {
            button.addEventListener('click', async (e) => {
                const orderId = e.target.dataset.orderId;
                const productId = e.target.dataset.productId;

                // Show confirmation dialog
                const result = await Swal.fire({
                    title: 'Approve Return?',
                    text: 'This will approve the return request and process a refund to the customer\'s wallet.',
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonColor: '#28a745',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Yes, approve it!'
                });

                if (result.isConfirmed) {
                    // Show loading state
                    Swal.fire({
                        title: 'Processing...',
                        text: 'Approving return request',
                        icon: 'info',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    try {
                        const response = await fetch(`/admin/orders/${orderId}/approve-return`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'CSRF-Token': '<%= csrfToken %>'
                            },
                            body: JSON.stringify({ productId })
                        });

                        const result = await response.json();

                        if (result.success) {
                            // Show success message
                            Swal.fire({
                                title: 'Return Approved!',
                                text: 'The return request has been approved and refund processed.',
                                icon: 'success',
                                confirmButtonColor: '#28a745'
                            }).then(() => {
                                // Reload the page to refresh the list
                                window.location.reload();
                            });
                        } else {
                            // Show error message
                            Swal.fire({
                                title: 'Error',
                                text: result.message || 'Failed to approve return',
                                icon: 'error',
                                confirmButtonColor: '#3085d6'
                            });
                        }
                    } catch (error) {
                        // Show error message
                        Swal.fire({
                            title: 'Error',
                            text: 'Error approving return: ' + error.message,
                            icon: 'error',
                            confirmButtonColor: '#3085d6'
                        });
                    }
                }
            });
        });

        // Reject Return Request
        document.querySelectorAll('.btn-reject-return').forEach(button => {
            button.addEventListener('click', async (e) => {
                const orderId = e.target.dataset.orderId;
                const productId = e.target.dataset.productId;

                // Show input dialog for rejection reason
                const { value: adminResponse } = await Swal.fire({
                    title: 'Reject Return',
                    input: 'textarea',
                    inputLabel: 'Reason for rejection',
                    inputPlaceholder: 'Enter the reason for rejecting this return request...',
                    inputAttributes: {
                        'aria-label': 'Reason for rejection'
                    },
                    showCancelButton: true,
                    confirmButtonColor: '#dc3545',
                    cancelButtonColor: '#6c757d',
                    confirmButtonText: 'Reject Return',
                    inputValidator: (value) => {
                        if (!value) {
                            return 'You need to provide a reason for rejection!';
                        }
                    }
                });

                if (adminResponse) {
                    // Show loading state
                    Swal.fire({
                        title: 'Processing...',
                        text: 'Rejecting return request',
                        icon: 'info',
                        allowOutsideClick: false,
                        showConfirmButton: false,
                        didOpen: () => {
                            Swal.showLoading();
                        }
                    });

                    try {
                        const response = await fetch(`/admin/orders/${orderId}/reject-return`, {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json',
                                'CSRF-Token': '<%= csrfToken %>'
                            },
                            body: JSON.stringify({ productId, adminResponse })
                        });

                        const result = await response.json();

                        if (result.success) {
                            // Show success message
                            Swal.fire({
                                title: 'Return Rejected!',
                                text: 'The return request has been rejected.',
                                icon: 'success',
                                confirmButtonColor: '#28a745'
                            }).then(() => {
                                // Reload the page to refresh the list
                                window.location.reload();
                            });
                        } else {
                            // Show error message
                            Swal.fire({
                                title: 'Error',
                                text: result.message || 'Failed to reject return',
                                icon: 'error',
                                confirmButtonColor: '#3085d6'
                            });
                        }
                    } catch (error) {
                        // Show error message
                        Swal.fire({
                            title: 'Error',
                            text: 'Error rejecting return: ' + error.message,
                            icon: 'error',
                            confirmButtonColor: '#3085d6'
                        });
                    }
                }
            });
        });
    </script>
</body>
</html>